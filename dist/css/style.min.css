/*
! tailwindcss v3.0.15 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.relative {
  position: relative;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-o-16 {
  margin-top: 0.16rem;
  margin-bottom: 0.16rem;
}

.mb-o-28 {
  margin-bottom: 0.28rem;
}

.mb-o-16 {
  margin-bottom: 0.16rem;
}

.mb-o-40 {
  margin-bottom: 0.40rem;
}

.mb-o-8 {
  margin-bottom: 0.08rem;
}

.mb-o-12 {
  margin-bottom: 0.12rem;
}

.mt-o-80 {
  margin-top: 0.80rem;
}

.mt-o-48 {
  margin-top: 0.48rem;
}

.mt-o-32 {
  margin-top: 0.32rem;
}

.mt-o-40 {
  margin-top: 0.40rem;
}

.mt-o-56 {
  margin-top: 0.56rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.h-o-200 {
  height: 2rem;
}

.w-o-692 {
  width: 6.92rem;
}

.w-o-155 {
  width: 1.55rem;
}

.w-o-614 {
  width: 6.14rem;
}

.w-full {
  width: 100%;
}

.w-o-650 {
  width: 6.50rem;
}

.w-o-315 {
  width: 3.15rem;
}

.w-o-120 {
  width: 1.20rem;
}

.w-o-708 {
  width: 7.08rem;
}

.translate-y-\[0\.4rem\] {
  --tw-translate-y: 0.4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.items-center {
  align-items: center;
}

.gap-o-8 {
  gap: 0.08rem;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.rounded-\[0\.1rem\] {
  border-radius: 0.1rem;
}

.rounded-\[0\.5rem\] {
  border-radius: 0.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.bg-\[\#8E0000\] {
  --tw-bg-opacity: 1;
  background-color: rgb(142 0 0 / var(--tw-bg-opacity));
}

.bg-\[\#EFEFEF\] {
  --tw-bg-opacity: 1;
  background-color: rgb(239 239 239 / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-\[\#E8E8E8\] {
  --tw-bg-opacity: 1;
  background-color: rgb(232 232 232 / var(--tw-bg-opacity));
}

.bg-\[\#EB6F48\] {
  --tw-bg-opacity: 1;
  background-color: rgb(235 111 72 / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(68 68 68 / var(--tw-bg-opacity));
}

.py-o-28 {
  padding-top: 0.28rem;
  padding-bottom: 0.28rem;
}

.px-o-4 {
  padding-left: 0.04rem;
  padding-right: 0.04rem;
}

.py-o-16 {
  padding-top: 0.16rem;
  padding-bottom: 0.16rem;
}

.px-o-40 {
  padding-left: 0.40rem;
  padding-right: 0.40rem;
}

.py-o-24 {
  padding-top: 0.24rem;
  padding-bottom: 0.24rem;
}

.py-o-4 {
  padding-top: 0.04rem;
  padding-bottom: 0.04rem;
}

.py-o-36 {
  padding-top: 0.36rem;
  padding-bottom: 0.36rem;
}

.pt-o-40 {
  padding-top: 0.40rem;
}

.pb-o-80 {
  padding-bottom: 0.80rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-md {
  font-size: 13.02083vw;
}

.text-16 {
  font-size: 0.16rem;
}

.text-20 {
  font-size: 0.20rem;
}

.text-39 {
  font-size: 0.39rem;
}

.text-28 {
  font-size: 0.28rem;
}

.text-18 {
  font-size: 0.18rem;
}

.text-19 {
  font-size: 0.19rem;
}

.text-24 {
  font-size: 0.24rem;
}

.text-23 {
  font-size: 0.23rem;
}

.text-30 {
  font-size: 0.30rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.leading-o-18 {
  line-height: 1.8;
}

.leading-none {
  line-height: 1;
}

.tracking-o-50 {
  letter-spacing: 0.050em;
}

.tracking-o-100 {
  letter-spacing: 0.100em;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-\[\#7C7C7C\] {
  --tw-text-opacity: 1;
  color: rgb(124 124 124 / var(--tw-text-opacity));
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html {
  /* ベースフォント */
  font-family: 'Noto Sans JP', sans-serif;
  color: #252525;
}

::-moz-placeholder{
  color: #757575;
}

:-ms-input-placeholder{
  color: #757575;
}

::placeholder{
  color: #757575;
}

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:right-o-16::before {
  content: var(--tw-content);
  right: 0.16rem;
}

.before\:top-\[calc\(50\%_-_0\.08rem\)\]::before {
  content: var(--tw-content);
  top: calc(50% - 0.08rem);
}

.before\:top-\[calc\(50\%_-_0\.06rem\)\]::before {
  content: var(--tw-content);
  top: calc(50% - 0.06rem);
}

.before\:right-o-180::before {
  content: var(--tw-content);
  right: 1.80rem;
}

.before\:left-0::before {
  content: var(--tw-content);
  left: 0px;
}

.before\:top-\[50\%_-_0\.04rem\]::before {
  content: var(--tw-content);
  top: 50% - 0.04rem;
}

.before\:top-\[calc\(50\%_-_0\.04rem\)\]::before {
  content: var(--tw-content);
  top: calc(50% - 0.04rem);
}

.before\:left-o-8::before {
  content: var(--tw-content);
  left: 0.08rem;
}

.before\:top-\[calc\(50\%_-_0\.12rem\)\]::before {
  content: var(--tw-content);
  top: calc(50% - 0.12rem);
}

.before\:h-o-16::before {
  content: var(--tw-content);
  height: 0.16rem;
}

.before\:h-o-12::before {
  content: var(--tw-content);
  height: 0.12rem;
}

.before\:h-o-20::before {
  content: var(--tw-content);
  height: 0.20rem;
}

.before\:h-o-24::before {
  content: var(--tw-content);
  height: 0.24rem;
}

.before\:h-\[16px\]::before {
  content: var(--tw-content);
  height: 16px;
}

.before\:h-\[32px\]::before {
  content: var(--tw-content);
  height: 32px;
}

.before\:h-\[20px\]::before {
  content: var(--tw-content);
  height: 20px;
}

.before\:h-\[12px\]::before {
  content: var(--tw-content);
  height: 12px;
}

.before\:w-o-16::before {
  content: var(--tw-content);
  width: 0.16rem;
}

.before\:w-o-12::before {
  content: var(--tw-content);
  width: 0.12rem;
}

.before\:w-o-20::before {
  content: var(--tw-content);
  width: 0.20rem;
}

.before\:w-o-24::before {
  content: var(--tw-content);
  width: 0.24rem;
}

.before\:w-\[16px\]::before {
  content: var(--tw-content);
  width: 16px;
}

.before\:w-\[32px\]::before {
  content: var(--tw-content);
  width: 32px;
}

.before\:w-\[20px\]::before {
  content: var(--tw-content);
  width: 20px;
}

.before\:w-\[12px\]::before {
  content: var(--tw-content);
  width: 12px;
}

.before\:rotate-\[225deg\]::before {
  content: var(--tw-content);
  --tw-rotate: 225deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.before\:rotate-\[135deg\]::before {
  content: var(--tw-content);
  --tw-rotate: 135deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.before\:rounded-full::before {
  content: var(--tw-content);
  border-radius: 9999px;
}

.before\:rounded-md::before {
  content: var(--tw-content);
  border-radius: 0.375rem;
}

.before\:rounded-\[0\.04rem\]::before {
  content: var(--tw-content);
  border-radius: 0.04rem;
}

.before\:border::before {
  content: var(--tw-content);
  border-width: 1px;
}

.before\:border-\[8px\]::before {
  content: var(--tw-content);
  border-width: 8px;
}

.before\:border-\[0\.02rem\]::before {
  content: var(--tw-content);
  border-width: 0.02rem;
}

.before\:border-\[0\.04rem\]::before {
  content: var(--tw-content);
  border-width: 0.04rem;
}

.before\:border-t-\[0\.04rem\]::before {
  content: var(--tw-content);
  border-top-width: 0.04rem;
}

.before\:border-l-\[0\.04rem\]::before {
  content: var(--tw-content);
  border-left-width: 0.04rem;
}

.before\:border-t-\[0\.02rem\]::before {
  content: var(--tw-content);
  border-top-width: 0.02rem;
}

.before\:border-l-\[0\.02rem\]::before {
  content: var(--tw-content);
  border-left-width: 0.02rem;
}

.before\:border-black::before {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(68 68 68 / var(--tw-border-opacity));
}

.before\:border-white::before {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.before\:bg-white::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.before\:content-\[\'\'\]::before {
  --tw-content: '';
  content: var(--tw-content);
}

.last\:mb-0:last-child {
  margin-bottom: 0px;
}

.hover\:bg-\[\#CE2628\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(206 38 40 / var(--tw-bg-opacity));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.peer:checked ~ .peer-checked\:left-0 {
  left: 0px;
}

.peer:checked ~ .peer-checked\:top-\[calc\(50\%_-_0\.08rem\)\] {
  top: calc(50% - 0.08rem);
}

.peer:checked ~ .peer-checked\:top-\[calc\(50\%_-_0\.12rem\)\] {
  top: calc(50% - 0.12rem);
}

.peer:checked ~ .peer-checked\:border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.peer:checked ~ .peer-checked\:bg-\[\#CE2628\] {
  --tw-bg-opacity: 1;
  background-color: rgb(206 38 40 / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.peer:checked ~ .peer-checked\:before\:border::before {
  content: var(--tw-content);
  border-width: 1px;
}

.peer:checked ~ .peer-checked\:before\:border-\[0\.02rem\]::before {
  content: var(--tw-content);
  border-width: 0.02rem;
}

.peer:checked ~ .peer-checked\:before\:bg-\[\#CE2628\]::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(206 38 40 / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:before\:bg-white::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.peer:checked ~ .peer-checked\:after\:left-o-8::after {
  content: var(--tw-content);
  left: 0.08rem;
}

.peer:checked ~ .peer-checked\:after\:top-\[calc\(50\%_-_0\.08rem\)\]::after {
  content: var(--tw-content);
  top: calc(50% - 0.08rem);
}

.peer:checked ~ .peer-checked\:after\:top-\[calc\(50\%_-_0\.04rem\)\]::after {
  content: var(--tw-content);
  top: calc(50% - 0.04rem);
}

.peer:checked ~ .peer-checked\:after\:left-o-12::after {
  content: var(--tw-content);
  left: 0.12rem;
}

.peer:checked ~ .peer-checked\:after\:left-o-14::after {
  content: var(--tw-content);
  left: 0.14rem;
}

.peer:checked ~ .peer-checked\:after\:top-\[calc\(50\%_-_0\.06rem\)\]::after {
  content: var(--tw-content);
  top: calc(50% - 0.06rem);
}

.peer:checked ~ .peer-checked\:after\:left-o-16::after {
  content: var(--tw-content);
  left: 0.16rem;
}

.peer:checked ~ .peer-checked\:after\:left-o-10::after {
  content: var(--tw-content);
  left: 0.1rem;
}

.peer:checked ~ .peer-checked\:after\:top-\[calc\(50\%_-_8px\)\]::after {
  content: var(--tw-content);
  top: calc(50% - 8px);
}

.peer:checked ~ .peer-checked\:after\:left-\[6px\]::after {
  content: var(--tw-content);
  left: 6px;
}

.peer:checked ~ .peer-checked\:after\:left-0::after {
  content: var(--tw-content);
  left: 0px;
}

.peer:checked ~ .peer-checked\:after\:top-\[calc\(50\%_-_0\.1rem\)\]::after {
  content: var(--tw-content);
  top: calc(50% - 0.1rem);
}

.peer:checked ~ .peer-checked\:after\:h-o-8::after {
  content: var(--tw-content);
  height: 0.08rem;
}

.peer:checked ~ .peer-checked\:after\:h-o-12::after {
  content: var(--tw-content);
  height: 0.12rem;
}

.peer:checked ~ .peer-checked\:after\:h-o-16::after {
  content: var(--tw-content);
  height: 0.16rem;
}

.peer:checked ~ .peer-checked\:after\:h-o-20::after {
  content: var(--tw-content);
  height: 0.20rem;
}

.peer:checked ~ .peer-checked\:after\:h-\[16px\]::after {
  content: var(--tw-content);
  height: 16px;
}

.peer:checked ~ .peer-checked\:after\:h-o-4::after {
  content: var(--tw-content);
  height: 0.04rem;
}

.peer:checked ~ .peer-checked\:after\:w-o-8::after {
  content: var(--tw-content);
  width: 0.08rem;
}

.peer:checked ~ .peer-checked\:after\:w-o-12::after {
  content: var(--tw-content);
  width: 0.12rem;
}

.peer:checked ~ .peer-checked\:after\:w-o-16::after {
  content: var(--tw-content);
  width: 0.16rem;
}

.peer:checked ~ .peer-checked\:after\:w-o-20::after {
  content: var(--tw-content);
  width: 0.20rem;
}

.peer:checked ~ .peer-checked\:after\:w-\[16px\]::after {
  content: var(--tw-content);
  width: 16px;
}

.peer:checked ~ .peer-checked\:after\:w-o-4::after {
  content: var(--tw-content);
  width: 0.04rem;
}

.peer:checked ~ .peer-checked\:after\:rotate-45::after {
  content: var(--tw-content);
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:checked ~ .peer-checked\:after\:-rotate-45::after {
  content: var(--tw-content);
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:checked ~ .peer-checked\:after\:rounded-full::after {
  content: var(--tw-content);
  border-radius: 9999px;
}

.peer:checked ~ .peer-checked\:after\:border-b-\[0\.04rem\]::after {
  content: var(--tw-content);
  border-bottom-width: 0.04rem;
}

.peer:checked ~ .peer-checked\:after\:border-l-\[0\.04rem\]::after {
  content: var(--tw-content);
  border-left-width: 0.04rem;
}

.peer:checked ~ .peer-checked\:after\:bg-\[\#CE2628\]::after {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(206 38 40 / var(--tw-bg-opacity));
}

.peer:checked ~ .peer-checked\:after\:content-\[\'\'\]::after {
  --tw-content: '';
  content: var(--tw-content);
}

.peer:hover ~ .peer-hover\:absolute {
  position: absolute;
}

.peer:hover ~ .peer-hover\:border-white {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.peer:hover ~ .peer-hover\:before\:border-\[0\.04rem\]::before {
  content: var(--tw-content);
  border-width: 0.04rem;
}

.peer:hover ~ .peer-hover\:before\:border-\[0\.02rem\]::before {
  content: var(--tw-content);
  border-width: 0.02rem;
}

.peer:hover ~ .peer-hover\:before\:bg-\[\#CE2628\]::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(206 38 40 / var(--tw-bg-opacity));
}

.peer:hover ~ .peer-hover\:before\:bg-white::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.peer:hover ~ .peer-hover\:after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.peer:hover ~ .peer-hover\:after\:left-o-12::after {
  content: var(--tw-content);
  left: 0.12rem;
}

.peer:hover ~ .peer-hover\:after\:top-\[calc\(50\%_-_0\.1rem\)\]::after {
  content: var(--tw-content);
  top: calc(50% - 0.1rem);
}

.peer:hover ~ .peer-hover\:after\:h-o-4::after {
  content: var(--tw-content);
  height: 0.04rem;
}

.peer:hover ~ .peer-hover\:after\:h-o-12::after {
  content: var(--tw-content);
  height: 0.12rem;
}

.peer:hover ~ .peer-hover\:after\:w-o-4::after {
  content: var(--tw-content);
  width: 0.04rem;
}

.peer:hover ~ .peer-hover\:after\:w-o-20::after {
  content: var(--tw-content);
  width: 0.20rem;
}

.peer:hover ~ .peer-hover\:after\:-rotate-45::after {
  content: var(--tw-content);
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer:hover ~ .peer-hover\:after\:border-b-\[0\.04rem\]::after {
  content: var(--tw-content);
  border-bottom-width: 0.04rem;
}

.peer:hover ~ .peer-hover\:after\:border-l-\[0\.04rem\]::after {
  content: var(--tw-content);
  border-left-width: 0.04rem;
}

.peer:hover ~ .peer-hover\:after\:content-\[\'\'\]::after {
  --tw-content: '';
  content: var(--tw-content);
}

@media (min-width: 768px) {
  .md\:mb-o-64 {
    margin-bottom: 0.64rem;
  }

  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:ml-auto {
    margin-left: auto;
  }

  .md\:block {
    display: block;
  }

  .md\:inline-block {
    display: inline-block;
  }

  .md\:inline {
    display: inline;
  }

  .md\:flex {
    display: flex;
  }

  .md\:w-o-1228 {
    width: 12.28rem;
  }

  .md\:w-o-901 {
    width: 9.01rem;
  }

  .md\:w-o-450 {
    width: 4.50rem;
  }

  .md\:w-o-1036 {
    width: 10.36rem;
  }

  .md\:translate-y-0 {
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:items-start {
    align-items: flex-start;
  }

  .md\:justify-between {
    justify-content: space-between;
  }

  .md\:text-left {
    text-align: left;
  }

  .md\:text-pc {
    font-size: 6.51042vw;
  }

  .md\:text-16 {
    font-size: 0.16rem;
  }

  .md\:text-38 {
    font-size: 0.38rem;
  }

  .md\:text-20 {
    font-size: 0.20rem;
  }

  .md\:text-21 {
    font-size: 0.21rem;
  }

  .md\:text-23 {
    font-size: 0.23rem;
  }

  .md\:before\:h-\[20px\]::before {
    content: var(--tw-content);
    height: 20px;
  }

  .md\:before\:h-o-20::before {
    content: var(--tw-content);
    height: 0.20rem;
  }

  .md\:before\:h-o-24::before {
    content: var(--tw-content);
    height: 0.24rem;
  }

  .md\:before\:w-\[20px\]::before {
    content: var(--tw-content);
    width: 20px;
  }

  .md\:before\:w-o-20::before {
    content: var(--tw-content);
    width: 0.20rem;
  }

  .md\:before\:w-o-24::before {
    content: var(--tw-content);
    width: 0.24rem;
  }
}
